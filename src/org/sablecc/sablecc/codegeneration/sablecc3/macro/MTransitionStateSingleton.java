/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.sablecc.codegeneration.sablecc3.macro;

import java.util.LinkedList;
import java.util.List;

public class MTransitionStateSingleton {

    private final String pNumber;

    private final MTransitionStateSingleton mTransitionStateSingleton = this;

    private final List<Object> ePackage = new LinkedList<Object>();

    private final List<Object> eSetMarker = new LinkedList<Object>();

    private final List<Object> eNoMarker = new LinkedList<Object>();

    private final List<Object> eTransitionTarget = new LinkedList<Object>();

    public MTransitionStateSingleton(
            String pNumber) {

        if (pNumber == null) {
            throw new NullPointerException();
        }
        this.pNumber = pNumber;
    }

    public MSetMarker newSetMarker(
            String pName) {

        MSetMarker lSetMarker = new MSetMarker(pName);
        this.eSetMarker.add(lSetMarker);
        return lSetMarker;
    }

    public MNoMarker newNoMarker() {

        MNoMarker lNoMarker = new MNoMarker();
        this.eNoMarker.add(lNoMarker);
        return lNoMarker;
    }

    public MTransitionTarget newTransitionTarget(
            String pSymbol,
            String pTarget) {

        MTransitionTarget lTransitionTarget = new MTransitionTarget(pSymbol,
                pTarget);
        this.eTransitionTarget.add(lTransitionTarget);
        return lTransitionTarget;
    }

    public MPackage newPackage(
            String pPackage) {

        MPackage lPackage = new MPackage(pPackage);
        this.ePackage.add(lPackage);
        return lPackage;
    }

    String pNumber() {

        return this.pNumber;
    }

    private String rNumber() {

        return this.mTransitionStateSingleton.pNumber();
    }

    @Override
    public String toString() {

        StringBuilder sb = new StringBuilder();
        sb.append(new MHeader().toString());
        sb.append(System.getProperty("line.separator"));
        sb.append("package ");
        for (Object oPackage : this.ePackage) {
            sb.append(oPackage.toString());
        }
        sb.append("lexer;");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        sb.append("class S_");
        sb.append(rNumber());
        sb.append(System.getProperty("line.separator"));
        sb.append("    extends TransitionState {");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        sb.append("  static final S_");
        sb.append(rNumber());
        sb.append(" instance = new S_");
        sb.append(rNumber());
        sb.append("();");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        sb.append("  private S_");
        sb.append(rNumber());
        sb.append("() {");
        sb.append(System.getProperty("line.separator"));
        sb.append("  }");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        for (Object oSetMarker : this.eSetMarker) {
            sb.append(oSetMarker.toString());
        }
        for (Object oNoMarker : this.eNoMarker) {
            sb.append(oNoMarker.toString());
        }
        sb.append(System.getProperty("line.separator"));
        sb.append("  State getTarget(Symbol symbol) {");
        sb.append(System.getProperty("line.separator"));
        sb.append("    switch(symbol) {");
        sb.append(System.getProperty("line.separator"));
        for (Object oTransitionTarget : this.eTransitionTarget) {
            sb.append(oTransitionTarget.toString());
        }
        sb.append("    default:");
        sb.append(System.getProperty("line.separator"));
        sb.append("      return null;");
        sb.append(System.getProperty("line.separator"));
        sb.append("    }");
        sb.append(System.getProperty("line.separator"));
        sb.append("  }");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        sb.append("}");
        sb.append(System.getProperty("line.separator"));
        return sb.toString();
    }

}
