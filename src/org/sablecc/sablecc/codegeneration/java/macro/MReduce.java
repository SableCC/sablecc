/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.sablecc.codegeneration.java.macro;

import java.util.*;

public class MReduce {

    private final String pAlternative;

    private final MReduce mReduce = this;

    private final List<Object> eReduceNormalPop_ReduceEndPop = new LinkedList<Object>();

    private final List<Object> eNormalParameter = new LinkedList<Object>();

    private final List<Object> eEndParameter = new LinkedList<Object>();

    private final List<Object> eReduceDecision = new LinkedList<Object>();

    private final List<Object> eAcceptDecision = new LinkedList<Object>();

    MReduce(
            String pAlternative) {

        if (pAlternative == null) {
            throw new NullPointerException();
        }
        this.pAlternative = pAlternative;
    }

    public MNormalParameter newNormalParameter(
            String pElementName) {

        MNormalParameter lNormalParameter = new MNormalParameter(pElementName);
        this.eNormalParameter.add(lNormalParameter);
        return lNormalParameter;
    }

    public MEndParameter newEndParameter() {

        MEndParameter lEndParameter = new MEndParameter();
        this.eEndParameter.add(lEndParameter);
        return lEndParameter;
    }

    public MReduceDecision newReduceDecision() {

        MReduceDecision lReduceDecision = new MReduceDecision(this.mReduce);
        this.eReduceDecision.add(lReduceDecision);
        return lReduceDecision;
    }

    public MAcceptDecision newAcceptDecision(
            String pElementName) {

        MAcceptDecision lAcceptDecision = new MAcceptDecision(pElementName);
        this.eAcceptDecision.add(lAcceptDecision);
        return lAcceptDecision;
    }

    public MReduceNormalPop newReduceNormalPop(
            String pElementType,
            String pElementName) {

        MReduceNormalPop lReduceNormalPop = new MReduceNormalPop(pElementType,
                pElementName);
        this.eReduceNormalPop_ReduceEndPop.add(lReduceNormalPop);
        return lReduceNormalPop;
    }

    public MReduceEndPop newReduceEndPop() {

        MReduceEndPop lReduceEndPop = new MReduceEndPop();
        this.eReduceNormalPop_ReduceEndPop.add(lReduceEndPop);
        return lReduceEndPop;
    }

    String pAlternative() {

        return this.pAlternative;
    }

    @Override
    public String toString() {

        StringBuilder sb = new StringBuilder();
        sb.append("      ParseStack stack = parser.getStack();");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        for (Object oReduceNormalPop_ReduceEndPop : this.eReduceNormalPop_ReduceEndPop) {
            sb.append(oReduceNormalPop_ReduceEndPop.toString());
        }
        sb.append(System.getProperty("line.separator"));
        for (Object oNormalParameter : this.eNormalParameter) {
            sb.append(oNormalParameter.toString());
        }
        for (Object oEndParameter : this.eEndParameter) {
            sb.append(oEndParameter.toString());
        }
        for (Object oReduceDecision : this.eReduceDecision) {
            sb.append(oReduceDecision.toString());
        }
        for (Object oAcceptDecision : this.eAcceptDecision) {
            sb.append(oAcceptDecision.toString());
        }
        return sb.toString();
    }

}
