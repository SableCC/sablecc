/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.sablecc.codegeneration.java.macro;

import java.util.*;

public class MLrStateSingleton {

    private final String pNumber;

    private final MLrStateSingleton mLrStateSingleton = this;

    private final List<Object> eDistance = new LinkedList<Object>();

    private final List<Object> eNormalLrTransitionTarget = new LinkedList<Object>();

    private final List<Object> eEndLrTransitionTarget = new LinkedList<Object>();

    MLrStateSingleton(
            String pNumber) {

        if (pNumber == null) {
            throw new NullPointerException();
        }
        this.pNumber = pNumber;
    }

    public MDistance newDistance(
            String pDistance) {

        MDistance lDistance = new MDistance(pDistance);
        this.eDistance.add(lDistance);
        return lDistance;
    }

    public MNormalLrTransitionTarget newNormalLrTransitionTarget(
            String pNodeType,
            String pTarget) {

        MNormalLrTransitionTarget lNormalLrTransitionTarget = new MNormalLrTransitionTarget(
                pNodeType, pTarget);
        this.eNormalLrTransitionTarget.add(lNormalLrTransitionTarget);
        return lNormalLrTransitionTarget;
    }

    public MEndLrTransitionTarget newEndLrTransitionTarget(
            String pTarget) {

        MEndLrTransitionTarget lEndLrTransitionTarget = new MEndLrTransitionTarget(
                pTarget);
        this.eEndLrTransitionTarget.add(lEndLrTransitionTarget);
        return lEndLrTransitionTarget;
    }

    String pNumber() {

        return this.pNumber;
    }

    private String rNumber() {

        return this.mLrStateSingleton.pNumber();
    }

    @Override
    public String toString() {

        StringBuilder sb = new StringBuilder();
        sb.append(System.getProperty("line.separator"));
        sb.append("class L_");
        sb.append(rNumber());
        sb.append(System.getProperty("line.separator"));
        sb.append("    extends LRState {");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        sb.append("  static final L_");
        sb.append(rNumber());
        sb.append(" instance = new L_");
        sb.append(rNumber());
        sb.append("();");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        sb.append("  private L_");
        sb.append(rNumber());
        sb.append("() {");
        sb.append(System.getProperty("line.separator"));
        sb.append("  }");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        sb.append("  @Override");
        sb.append(System.getProperty("line.separator"));
        sb.append("  Node apply(Parser parser)");
        sb.append(System.getProperty("line.separator"));
        sb
                .append("      throws ParserException, LexerException, IOException {");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        for (Object oDistance : this.eDistance) {
            sb.append(oDistance.toString());
        }
        sb.append("    return null;");
        sb.append(System.getProperty("line.separator"));
        sb.append("  }");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        sb.append("  @Override");
        sb.append(System.getProperty("line.separator"));
        sb.append("  LRState getTarget(Node node)");
        sb.append(System.getProperty("line.separator"));
        sb
                .append("      throws ParserException, LexerException, IOException {");
        sb.append(System.getProperty("line.separator"));
        sb.append("    switch(node.getInternalType()) {");
        sb.append(System.getProperty("line.separator"));
        for (Object oNormalLrTransitionTarget : this.eNormalLrTransitionTarget) {
            sb.append(oNormalLrTransitionTarget.toString());
        }
        for (Object oEndLrTransitionTarget : this.eEndLrTransitionTarget) {
            sb.append(oEndLrTransitionTarget.toString());
        }
        sb.append("    default:");
        sb.append(System.getProperty("line.separator"));
        sb.append("      throw new ParserException((Token) node);");
        sb.append(System.getProperty("line.separator"));
        sb.append("    }");
        sb.append(System.getProperty("line.separator"));
        sb.append("  }");
        sb.append(System.getProperty("line.separator"));
        sb.append("}");
        sb.append(System.getProperty("line.separator"));
        return sb.toString();
    }

}
