/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.java.macro;

public class MParamStringRefBuilder extends Macro{

    private String field_Name;

    private Macro list_ListContextParam[];

    private Macro list_ListGetInternalTail[];

    private final Context ListContextParamContext = new Context();
    private final Context ListGetInternalTailContext = new Context();

    public MParamStringRefBuilder(String pName, Macro pListContextParam[], Macro pListGetInternalTail[]){

        this.setPName(pName);
        this.setPListContextParam(pListContextParam);
        this.setPListGetInternalTail(pListGetInternalTail);
    }

    private void setPName(String pName){
        if(pName == null){
            throw ObjectMacroException.parameterNull("Name");
        }

        this.field_Name = pName;
    }

    private void setPListContextParam(Macro pListContextParam[]){
        if(pListContextParam == null){
            throw ObjectMacroException.parameterNull("ListContextParam");
        }

        Macro macros[] = pListContextParam;
        this.list_ListContextParam = new Macro[macros.length];
        int i = 0;

        for(Macro macro : macros){
            if(macro == null){
                throw ObjectMacroException.macroNull(i, "ListContextParam");
            }

            macro.apply(new InternalsInitializer("ListContextParam"){
@Override
void setContextParam(MContextParam mContextParam){

        }
});

            this.list_ListContextParam[i++] = macro;

        }
    }

    private void setPListGetInternalTail(Macro pListGetInternalTail[]){
        if(pListGetInternalTail == null){
            throw ObjectMacroException.parameterNull("ListGetInternalTail");
        }

        Macro macros[] = pListGetInternalTail;
        this.list_ListGetInternalTail = new Macro[macros.length];
        int i = 0;

        for(Macro macro : macros){
            if(macro == null){
                throw ObjectMacroException.macroNull(i, "ListGetInternalTail");
            }

            macro.apply(new InternalsInitializer("ListGetInternalTail"){
@Override
void setGetInternalTail(MGetInternalTail mGetInternalTail){

        }
});

            this.list_ListGetInternalTail[i++] = macro;

        }
    }

    private String buildName(){

        return this.field_Name;
    }

    private String buildListContextParam(){

        StringBuilder sb0 = new StringBuilder();
        Context local_context = ListContextParamContext;
        Macro macros[] = this.list_ListContextParam;
                boolean first = true;
        int i = 0;

        for(Macro macro : macros){
                        
            sb0.append(macro.build(local_context));
            i++;

                    }

        return sb0.toString();
    }

    private String buildListGetInternalTail(){

        StringBuilder sb0 = new StringBuilder();
        Context local_context = ListGetInternalTailContext;
        Macro macros[] = this.list_ListGetInternalTail;
                boolean first = true;
        int i = 0;

        for(Macro macro : macros){
                        
            sb0.append(macro.build(local_context));
            i++;

                    }

        return sb0.toString();
    }

    private String getName(){

        return this.field_Name;
    }

    private Macro[] getListContextParam(){

        return this.list_ListContextParam;
    }

    private Macro[] getListGetInternalTail(){

        return this.list_ListGetInternalTail;
    }

    @Override
    void apply(
            InternalsInitializer internalsInitializer){

        internalsInitializer.setParamStringRefBuilder(this);
    }

    @Override
    public String build(){

        String local_expansion = this.expansion;

        if(local_expansion != null){
            return local_expansion;
        }

        StringBuilder sb0 = new StringBuilder();

        sb0.append("    private String build");
        sb0.append(buildName());
        sb0.append("(");
        sb0.append(buildListContextParam());
        sb0.append(")");
        sb0.append("{");
        sb0.append(LINE_SEPARATOR);
        sb0.append(LINE_SEPARATOR);
        sb0.append("        return this.field_");
        sb0.append(buildName());
        sb0.append(buildListGetInternalTail());
        sb0.append(";");
        sb0.append(LINE_SEPARATOR);
        sb0.append("    }");

        local_expansion = sb0.toString();
        this.expansion = local_expansion;
        return local_expansion;
    }

    @Override
    String build(Context context) {
        return build();
    }
}
