/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.java.macro;

import java.util.*;

public class MApplyInternalsInitializer {

  private final String pParamName;
  private final MApplyInternalsInitializer mApplyInternalsInitializer = this;
  private final List<Object> eRedefinedInternalsSetter = new LinkedList<Object>();

  public MApplyInternalsInitializer(String pParamName) {
    if(pParamName == null) throw new NullPointerException();
    this.pParamName = pParamName;
  }

  public MRedefinedInternalsSetter newRedefinedInternalsSetter(String pName) {
    MRedefinedInternalsSetter lRedefinedInternalsSetter = new MRedefinedInternalsSetter(pName);
    this.eRedefinedInternalsSetter.add(lRedefinedInternalsSetter);
    return lRedefinedInternalsSetter;
  }

  String pParamName() {
    return this.pParamName;
  }

  private String rParamName() {
    return this.mApplyInternalsInitializer.pParamName();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("macro.apply(new InternalsInitializer(\"");
    sb.append(rParamName());
    sb.append("\"){");
    sb.append(System.getProperty("line.separator"));
    for(Object oRedefinedInternalsSetter : this.eRedefinedInternalsSetter) {
      sb.append(oRedefinedInternalsSetter.toString());
    }
    sb.append("});");
    sb.append(System.getProperty("line.separator"));
    return sb.toString();
  }

}
