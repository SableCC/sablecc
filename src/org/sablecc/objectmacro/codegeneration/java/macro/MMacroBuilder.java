/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.java.macro;

import java.util.*;

public class MMacroBuilder {

  private final String pMacroName;
  private final MMacroBuilder mMacroBuilder = this;
  private final List<Object> ePublic = new LinkedList<Object>();
  private final List<Object> eContextParam = new LinkedList<Object>();
  private final List<Object> eContextBuildState = new LinkedList<Object>();
  private final List<Object> eNewBuildState = new LinkedList<Object>();
  private final List<Object> eStringPart_ParamInsertPart_EolPart_InsertMacroPart = new LinkedList<Object>();
  private final List<Object> eInitDirectivesCall = new LinkedList<Object>();
  private final List<Object> eInitInternalsCall = new LinkedList<Object>();

  public MMacroBuilder(String pMacroName) {
    if(pMacroName == null) throw new NullPointerException();
    this.pMacroName = pMacroName;
  }

  public MInitDirectivesCall newInitDirectivesCall(String pParamName) {
    MInitDirectivesCall lInitDirectivesCall = new MInitDirectivesCall(pParamName);
    this.eInitDirectivesCall.add(lInitDirectivesCall);
    return lInitDirectivesCall;
  }

  public MInitInternalsCall newInitInternalsCall(String pParamName) {
    MInitInternalsCall lInitInternalsCall = new MInitInternalsCall(pParamName);
    this.eInitInternalsCall.add(lInitInternalsCall);
    return lInitInternalsCall;
  }

  public MPublic newPublic() {
    MPublic lPublic = new MPublic();
    this.ePublic.add(lPublic);
    return lPublic;
  }

  public MContextParam newContextParam() {
    MContextParam lContextParam = new MContextParam();
    this.eContextParam.add(lContextParam);
    return lContextParam;
  }

  public MContextBuildState newContextBuildState() {
    MContextBuildState lContextBuildState = new MContextBuildState();
    this.eContextBuildState.add(lContextBuildState);
    return lContextBuildState;
  }

  public MNewBuildState newNewBuildState() {
    MNewBuildState lNewBuildState = new MNewBuildState();
    this.eNewBuildState.add(lNewBuildState);
    return lNewBuildState;
  }

  public MStringPart newStringPart(String pString, String pIndexBuilder) {
    MStringPart lStringPart = new MStringPart(pString, pIndexBuilder);
    this.eStringPart_ParamInsertPart_EolPart_InsertMacroPart.add(lStringPart);
    return lStringPart;
  }

  public MParamInsertPart newParamInsertPart(String pParamName, String pIndexBuilder) {
    MParamInsertPart lParamInsertPart = new MParamInsertPart(pParamName, pIndexBuilder);
    this.eStringPart_ParamInsertPart_EolPart_InsertMacroPart.add(lParamInsertPart);
    return lParamInsertPart;
  }

  public MEolPart newEolPart(String pIndexBuilder) {
    MEolPart lEolPart = new MEolPart(pIndexBuilder);
    this.eStringPart_ParamInsertPart_EolPart_InsertMacroPart.add(lEolPart);
    return lEolPart;
  }

  public MInsertMacroPart newInsertMacroPart(String pName, String pIndexBuilder, String pIndexInsert) {
    MInsertMacroPart lInsertMacroPart = new MInsertMacroPart(pName, pIndexBuilder, pIndexInsert);
    this.eStringPart_ParamInsertPart_EolPart_InsertMacroPart.add(lInsertMacroPart);
    return lInsertMacroPart;
  }

  String pMacroName() {
    return this.pMacroName;
  }

  private String rMacroName() {
    return this.mMacroBuilder.pMacroName();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("    @Override");
    sb.append(System.getProperty("line.separator"));
    sb.append("    ");
    for(Object oPublic : this.ePublic) {
      sb.append(oPublic.toString());
    }
    sb.append(" String build(");
    for(Object oContextParam : this.eContextParam) {
      sb.append(oContextParam.toString());
    }
    sb.append("){");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("        BuildState buildState = ");
    if(this.eContextBuildState.size() == 0) {
      sb.append("this.build_state");
    }
    for(Object oContextBuildState : this.eContextBuildState) {
      sb.append(oContextBuildState.toString());
    }
    sb.append(";");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("        if(buildState == null){");
    sb.append(System.getProperty("line.separator"));
    sb.append("            buildState = new BuildState();");
    sb.append(System.getProperty("line.separator"));
    sb.append("        }");
    sb.append(System.getProperty("line.separator"));
    sb.append("        else if(buildState.getExpansion() == null){");
    sb.append(System.getProperty("line.separator"));
    sb.append("            throw ObjectMacroException.cyclicReference(\"");
    sb.append(rMacroName());
    sb.append("\");");
    sb.append(System.getProperty("line.separator"));
    sb.append("        }");
    sb.append(System.getProperty("line.separator"));
    sb.append("        else{");
    sb.append(System.getProperty("line.separator"));
    sb.append("            return buildState.getExpansion();");
    sb.append(System.getProperty("line.separator"));
    sb.append("        }");
    sb.append(System.getProperty("line.separator"));
    sb.append("        ");
    if(this.eNewBuildState.size() == 0) {
      sb.append("this.build_state = buildState");
    }
    for(Object oNewBuildState : this.eNewBuildState) {
      sb.append(oNewBuildState.toString());
    }
    sb.append(";");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("        ");
    for(Object oInitDirectivesCall : this.eInitDirectivesCall) {
      sb.append(oInitDirectivesCall.toString());
    }
    sb.append(System.getProperty("line.separator"));
    sb.append("        ");
    for(Object oInitInternalsCall : this.eInitInternalsCall) {
      sb.append(oInitInternalsCall.toString());
    }
    sb.append(System.getProperty("line.separator"));
    sb.append("        StringBuilder sb0 = new StringBuilder();");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    for(Object oStringPart_ParamInsertPart_EolPart_InsertMacroPart : this.eStringPart_ParamInsertPart_EolPart_InsertMacroPart) {
      sb.append(oStringPart_ParamInsertPart_EolPart_InsertMacroPart.toString());
    }
    sb.append(System.getProperty("line.separator"));
    sb.append("        buildState.setExpansion(sb0.toString());");
    sb.append(System.getProperty("line.separator"));
    sb.append("        return sb0.toString();");
    sb.append(System.getProperty("line.separator"));
    sb.append("    }");
    sb.append(System.getProperty("line.separator"));
    return sb.toString();
  }

}
