/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.java.macro;
import java.util.*;

class MUserErrorVersionsDifferent extends Macro{

    public MUserErrorVersionsDifferent(){

    }

    @Override
    void apply(
             InternalsInitializer internalsInitializer){

        internalsInitializer.setUserErrorVersionsDifferent(this);
    }

    @Override
    public String build(){

        BuildState buildState = this.build_state;

        if(buildState == null){
            buildState = new BuildState();
        }
        else if(buildState.getExpansion() == null){
            throw ObjectMacroException.cyclicReference("UserErrorVersionsDifferent");
        }
        else{
            return buildState.getExpansion();
        }
        this.build_state = buildState;
        List<String> indentations = new LinkedList<>();
        StringBuilder sbIndentation = new StringBuilder();

        StringBuilder sb0 = new StringBuilder();

        MObjectMacroUserErrorHead minsert_3 = new MObjectMacroUserErrorHead();

        sb0.append(minsert_3.build(null));
        sb0.append(LINE_SEPARATOR);
        sb0.append(LINE_SEPARATOR);
        sb0.append("The Macros of the child macro must be equal to the Macros of the parent.");

        buildState.setExpansion(sb0.toString());
        return sb0.toString();
    }


    @Override
    String build(Context context) {
        return build();
    }
}