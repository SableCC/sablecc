/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.java.macro;

public class MInternalMacroRefBuilder extends Macro{

    private String field_InternalName;

    public MInternalMacroRefBuilder(String pInternalName){

        this.setPInternalName(pInternalName);
    }

    private void setPInternalName(String pInternalName){
        if(pInternalName == null){
            throw ObjectMacroException.parameterNull("InternalName");
        }

        this.field_InternalName = pInternalName;
    }

    private String buildInternalName(){

        return this.field_InternalName;
    }

    private String getInternalName(){

        return this.field_InternalName;
    }

    @Override
    void apply(
            InternalsInitializer internalsInitializer){

        internalsInitializer.setInternalMacroRefBuilder(this);
    }

    @Override
    public String build(){

        String local_expansion = this.expansion;

        if(local_expansion != null){
            return local_expansion;
        }

        StringBuilder sb0 = new StringBuilder();

        sb0.append("    private String build");
        sb0.append(buildInternalName());
        sb0.append("(Context context)");
        sb0.append("{");
        sb0.append(LINE_SEPARATOR);
        sb0.append(LINE_SEPARATOR);
        sb0.append("        InternalValue macros = this.list_");
        sb0.append(buildInternalName());
        sb0.append(".get(context);");
        sb0.append(LINE_SEPARATOR);
        sb0.append("        return macros.build();");
        sb0.append(LINE_SEPARATOR);
        sb0.append("    }");

        local_expansion = sb0.toString();
        this.expansion = local_expansion;
        return local_expansion;
    }

    @Override
    String build(Context context) {
        return build();
    }
}
