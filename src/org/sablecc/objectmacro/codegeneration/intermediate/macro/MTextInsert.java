/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.intermediate.macro;

import java.util.LinkedList;
import java.util.List;

public class MTextInsert {

    private final String pName;

    private final String pIndent;

    private final MTextInsert mTextInsert = this;

    private final List<Object> eInlineTextArg_ParamInsertArg_TextInsertArg = new LinkedList<Object>();

    private final List<Object> eAncestorRef = new LinkedList<Object>();

    public MTextInsert(
            String pName,
            String pIndent) {

        if (pName == null) {
            throw new NullPointerException();
        }
        this.pName = pName;
        if (pIndent == null) {
            throw new NullPointerException();
        }
        this.pIndent = pIndent;
    }

    public MInlineTextArg newInlineTextArg(
            String pIndent) {

        MInlineTextArg lInlineTextArg = new MInlineTextArg(pIndent);
        this.eInlineTextArg_ParamInsertArg_TextInsertArg.add(lInlineTextArg);
        return lInlineTextArg;
    }

    public MParamInsertArg newParamInsertArg(
            String pName,
            String pIndent) {

        MParamInsertArg lParamInsertArg = new MParamInsertArg(pName, pIndent);
        this.eInlineTextArg_ParamInsertArg_TextInsertArg.add(lParamInsertArg);
        return lParamInsertArg;
    }

    public MTextInsertArg newTextInsertArg(
            String pIndent) {

        MTextInsertArg lTextInsertArg = new MTextInsertArg(pIndent);
        this.eInlineTextArg_ParamInsertArg_TextInsertArg.add(lTextInsertArg);
        return lTextInsertArg;
    }

    public MAncestorRef newAncestorRef(
            String pName,
            String pIndent) {

        MAncestorRef lAncestorRef = new MAncestorRef(pName, pIndent);
        this.eAncestorRef.add(lAncestorRef);
        return lAncestorRef;
    }

    String pName() {

        return this.pName;
    }

    String pIndent() {

        return this.pIndent;
    }

    private String rIndent() {

        return this.mTextInsert.pIndent();
    }

    private String rName() {

        return this.mTextInsert.pName();
    }

    @Override
    public String toString() {

        StringBuilder sb = new StringBuilder();
        sb.append(rIndent());
        sb.append("  text_insert {");
        sb.append(System.getProperty("line.separator"));
        sb.append(rIndent());
        sb.append("    name = ");
        sb.append(rName());
        sb.append(";");
        sb.append(System.getProperty("line.separator"));
        for (Object oInlineTextArg_ParamInsertArg_TextInsertArg : this.eInlineTextArg_ParamInsertArg_TextInsertArg) {
            sb.append(oInlineTextArg_ParamInsertArg_TextInsertArg.toString());
        }
        for (Object oAncestorRef : this.eAncestorRef) {
            sb.append(oAncestorRef.toString());
        }
        sb.append(rIndent());
        sb.append("  }");
        sb.append(System.getProperty("line.separator"));
        return sb.toString();
    }

}
