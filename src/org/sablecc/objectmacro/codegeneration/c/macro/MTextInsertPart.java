/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.c.macro;

import java.util.LinkedList;
import java.util.List;

public class MTextInsertPart {

    private final MFile mFile;

    private final List<Object> eTextInsert = new LinkedList<Object>();

    private final List<Object> eTextInsertString = new LinkedList<Object>();

    private final List<Object> eTextInsertDestructor = new LinkedList<Object>();

    MTextInsertPart(
            MFile mFile) {

        if (mFile == null) {
            throw new NullPointerException();
        }
        this.mFile = mFile;
    }

    public MTextInsert newTextInsert(
            String pName) {

        MTextInsert lTextInsert = new MTextInsert(pName, this.mFile);
        this.eTextInsert.add(lTextInsert);
        return lTextInsert;
    }

    public MTextInsertString newTextInsertString(
            String pName) {

        MTextInsertString lTextInsertString = new MTextInsertString(pName);
        this.eTextInsertString.add(lTextInsertString);
        return lTextInsertString;
    }

    public MTextInsertDestructor newTextInsertDestructor(
            String pName) {

        MTextInsertDestructor lTextInsertDestructor = new MTextInsertDestructor(
                pName);
        this.eTextInsertDestructor.add(lTextInsertDestructor);
        return lTextInsertDestructor;
    }

    @Override
    public String toString() {

        StringBuilder sb = new StringBuilder();
        for (Object oTextInsert : this.eTextInsert) {
            sb.append(oTextInsert.toString());
        }
        sb.append("  sizeString += List_pushback(listString, strdup(");
        if (this.eTextInsertString.size() == 0) {
            sb.append("\"\"");
        }
        for (Object oTextInsertString : this.eTextInsertString) {
            sb.append(oTextInsertString.toString());
        }
        sb.append("));");
        sb.append(System.getProperty("line.separator"));
        for (Object oTextInsertDestructor : this.eTextInsertDestructor) {
            sb.append(oTextInsertDestructor.toString());
        }
        return sb.toString();
    }

}
