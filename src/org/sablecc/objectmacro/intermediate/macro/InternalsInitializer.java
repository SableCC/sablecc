/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.intermediate.macro;

class InternalsInitializer {

    private final String _paramName;

    InternalsInitializer(String paramName){
        this._paramName = paramName;
    }
    void setIntermediateRepresentation(MIntermediateRepresentation mIntermediateRepresentation){
        throw ObjectMacroException.incorrectType("MIntermediateRepresentation", this._paramName);
    }
    
    void setMacro(MMacro mMacro){
        throw ObjectMacroException.incorrectType("MMacro", this._paramName);
    }
    
    void setParam(MParam mParam){
        throw ObjectMacroException.incorrectType("MParam", this._paramName);
    }
    
    void setInternal(MInternal mInternal){
        throw ObjectMacroException.incorrectType("MInternal", this._paramName);
    }
    
    void setStringType(MStringType mStringType){
        throw ObjectMacroException.incorrectType("MStringType", this._paramName);
    }
    
    void setMacroType(MMacroType mMacroType){
        throw ObjectMacroException.incorrectType("MMacroType", this._paramName);
    }
    
    void setMacroRef(MMacroRef mMacroRef){
        throw ObjectMacroException.incorrectType("MMacroRef", this._paramName);
    }
    
    void setArgs(MArgs mArgs){
        throw ObjectMacroException.incorrectType("MArgs", this._paramName);
    }
    
    void setVarArgument(MVarArgument mVarArgument){
        throw ObjectMacroException.incorrectType("MVarArgument", this._paramName);
    }
    
    void setTextArgument(MTextArgument mTextArgument){
        throw ObjectMacroException.incorrectType("MTextArgument", this._paramName);
    }
    
    void setParamName(MParamName mParamName){
        throw ObjectMacroException.incorrectType("MParamName", this._paramName);
    }
    
    void setStringPart(MStringPart mStringPart){
        throw ObjectMacroException.incorrectType("MStringPart", this._paramName);
    }
    
    void setEolPart(MEolPart mEolPart){
        throw ObjectMacroException.incorrectType("MEolPart", this._paramName);
    }
    
    void setMacroInsert(MMacroInsert mMacroInsert){
        throw ObjectMacroException.incorrectType("MMacroInsert", this._paramName);
    }
    
    void setParamInsert(MParamInsert mParamInsert){
        throw ObjectMacroException.incorrectType("MParamInsert", this._paramName);
    }
    
    void setIndentPart(MIndentPart mIndentPart){
        throw ObjectMacroException.incorrectType("MIndentPart", this._paramName);
    }
    
    void setEndIndentPart(MEndIndentPart mEndIndentPart){
        throw ObjectMacroException.incorrectType("MEndIndentPart", this._paramName);
    }
    
    void setDirective(MDirective mDirective){
        throw ObjectMacroException.incorrectType("MDirective", this._paramName);
    }
    
    void setSimpleName(MSimpleName mSimpleName){
        throw ObjectMacroException.incorrectType("MSimpleName", this._paramName);
    }
    
    void setName(MName mName){
        throw ObjectMacroException.incorrectType("MName", this._paramName);
    }
    
    void setParentName(MParentName mParentName){
        throw ObjectMacroException.incorrectType("MParentName", this._paramName);
    }
    
    void setIsAbstract(MIsAbstract mIsAbstract){
        throw ObjectMacroException.incorrectType("MIsAbstract", this._paramName);
    }
    
    void setIsAllVersionned(MIsAllVersionned mIsAllVersionned){
        throw ObjectMacroException.incorrectType("MIsAllVersionned", this._paramName);
    }
    
    void setVersions(MVersions mVersions){
        throw ObjectMacroException.incorrectType("MVersions", this._paramName);
    }

    void setObjectMacroUserErrorHead(MObjectMacroUserErrorHead mObjectMacroUserErrorHead){
        throw ObjectMacroException.incorrectType("MObjectMacroUserErrorHead", this._paramName);
    }

    void setUserErrorIncorrectType(MUserErrorIncorrectType mUserErrorIncorrectType){
        throw ObjectMacroException.incorrectType("MUserErrorIncorrectType", this._paramName);
    }

    void setUserErrorMacroNullInList(MUserErrorMacroNullInList mUserErrorMacroNullInList){
        throw ObjectMacroException.incorrectType("MUserErrorMacroNullInList", this._paramName);
    }

    void setUserErrorCyclicReference(MUserErrorCyclicReference mUserErrorCyclicReference){
        throw ObjectMacroException.incorrectType("MUserErrorCyclicReference", this._paramName);
    }

    void setUserErrorParameterNull(MUserErrorParameterNull mUserErrorParameterNull){
        throw ObjectMacroException.incorrectType("MUserErrorParameterNull", this._paramName);
    }

    void setUserErrorCannotModify(MUserErrorCannotModify mUserErrorCannotModify){
        throw ObjectMacroException.incorrectType("MUserErrorCannotModify", this._paramName);
    }

    void setUserErrorVersionNull(MUserErrorVersionNull mUserErrorVersionNull){
        throw ObjectMacroException.incorrectType("MUserErrorVersionNull", this._paramName);
    }

    void setUserErrorVersionsDifferent(MUserErrorVersionsDifferent mUserErrorVersionsDifferent){
        throw ObjectMacroException.incorrectType("MUserErrorVersionsDifferent", this._paramName);
    }

    void setUserErrorInternalException(MUserErrorInternalException mUserErrorInternalException){
        throw ObjectMacroException.incorrectType("MUserErrorInternalException", this._paramName);
    }

}