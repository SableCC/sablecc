/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.macro;

import java.util.LinkedList;
import java.util.List;

public class M_macro
        extends Macro {

    // ---- constructor ----

    public M_macro(
            String p_macro_name) {

        this.p_macro_name = p_macro_name;
        this.t_param_declaration_header = new T_param_declaration_header(this);
        this.t_text_block_declaration_header = new T_text_block_declaration_header(
                this);
        this.t_expand_declaration_header = new T_expand_declaration_header(this);
        this.t_submacro_creator_head = new T_submacro_creator_head(this);
    }

    // ---- parent ----

    @Override
    Macro get_parent() {

        return null;
    }

    // ---- parameters ----

    private final String p_macro_name;

    String get_local_p_macro_name() {

        return this.p_macro_name;
    }

    // ---- text blocks ----

    private final T_param_declaration_header t_param_declaration_header;

    T_param_declaration_header get_local_t_param_declaration_header() {

        return this.t_param_declaration_header;
    }

    private final T_text_block_declaration_header t_text_block_declaration_header;

    T_text_block_declaration_header get_local_t_text_block_declaration_header() {

        return this.t_text_block_declaration_header;
    }

    private final T_expand_declaration_header t_expand_declaration_header;

    T_expand_declaration_header get_local_t_expand_declaration_header() {

        return this.t_expand_declaration_header;
    }

    private final T_submacro_creator_head t_submacro_creator_head;

    T_submacro_creator_head get_local_t_submacro_creator_head() {

        return this.t_submacro_creator_head;
    }

    // ---- expands ----

    private final List<Macro> e_expand_0 = new LinkedList<Macro>();

    private final List<Macro> e_expand_2 = new LinkedList<Macro>();

    private final List<Macro> e_expand_6 = new LinkedList<Macro>();

    private final List<Macro> e_expand_7 = new LinkedList<Macro>();

    private final List<Macro> e_expand_8 = new LinkedList<Macro>();

    private final List<Macro> e_expand_9 = new LinkedList<Macro>();

    private final List<Macro> e_expand_10 = new LinkedList<Macro>();

    private final List<Macro> e_expand_11 = new LinkedList<Macro>();

    private final List<Macro> e_expand_12 = new LinkedList<Macro>();

    private final List<Macro> e_expand_13 = new LinkedList<Macro>();

    private final List<Macro> e_expand_14 = new LinkedList<Macro>();

    private final List<Macro> e_expand_15 = new LinkedList<Macro>();

    private final List<Macro> e_expand_16 = new LinkedList<Macro>();

    private final List<Macro> e_expand_17 = new LinkedList<Macro>();

    private final List<Macro> e_expand_23 = new LinkedList<Macro>();

    // ---- parameter accessors ----

    private String cached_p_macro_name;

    String get_p_macro_name() {

        String result = this.cached_p_macro_name;

        if (result == null) {
            Macro current = this;

            while (!(current instanceof M_macro)) {
                current = current.get_parent();
            }

            result = ((M_macro) current).get_local_p_macro_name();
            this.cached_p_macro_name = result;
        }

        return result;
    }

    // ---- text block accessors ----

    private T_header cached_t_header;

    T_header get_t_header() {

        T_header result = this.cached_t_header;

        if (result == null) {
            result = T_header.getInstance();
            this.cached_t_header = result;
        }

        return result;
    }

    private T_comma cached_t_comma;

    T_comma get_t_comma() {

        T_comma result = this.cached_t_comma;

        if (result == null) {
            result = T_comma.getInstance();
            this.cached_t_comma = result;
        }

        return result;
    }

    private T_param_declaration_header cached_t_param_declaration_header;

    T_param_declaration_header get_t_param_declaration_header() {

        T_param_declaration_header result = this.cached_t_param_declaration_header;

        if (result == null) {
            Macro current = this;

            while (!(current instanceof M_macro)) {
                current = current.get_parent();
            }

            result = ((M_macro) current).get_local_t_param_declaration_header();
            this.cached_t_param_declaration_header = result;
        }

        return result;
    }

    private T_text_block_declaration_header cached_t_text_block_declaration_header;

    T_text_block_declaration_header get_t_text_block_declaration_header() {

        T_text_block_declaration_header result = this.cached_t_text_block_declaration_header;

        if (result == null) {
            Macro current = this;

            while (!(current instanceof M_macro)) {
                current = current.get_parent();
            }

            result = ((M_macro) current)
                    .get_local_t_text_block_declaration_header();
            this.cached_t_text_block_declaration_header = result;
        }

        return result;
    }

    private T_expand_declaration_header cached_t_expand_declaration_header;

    T_expand_declaration_header get_t_expand_declaration_header() {

        T_expand_declaration_header result = this.cached_t_expand_declaration_header;

        if (result == null) {
            Macro current = this;

            while (!(current instanceof M_macro)) {
                current = current.get_parent();
            }

            result = ((M_macro) current)
                    .get_local_t_expand_declaration_header();
            this.cached_t_expand_declaration_header = result;
        }

        return result;
    }

    private T_blank_line cached_t_blank_line;

    T_blank_line get_t_blank_line() {

        T_blank_line result = this.cached_t_blank_line;

        if (result == null) {
            result = T_blank_line.getInstance();
            this.cached_t_blank_line = result;
        }

        return result;
    }

    private T_param_accessor_head cached_t_param_accessor_head;

    T_param_accessor_head get_t_param_accessor_head() {

        T_param_accessor_head result = this.cached_t_param_accessor_head;

        if (result == null) {
            result = T_param_accessor_head.getInstance();
            this.cached_t_param_accessor_head = result;
        }

        return result;
    }

    private T_text_block_accessor_head cached_t_text_block_accessor_head;

    T_text_block_accessor_head get_t_text_block_accessor_head() {

        T_text_block_accessor_head result = this.cached_t_text_block_accessor_head;

        if (result == null) {
            result = T_text_block_accessor_head.getInstance();
            this.cached_t_text_block_accessor_head = result;
        }

        return result;
    }

    private T_submacro_creator_head cached_t_submacro_creator_head;

    T_submacro_creator_head get_t_submacro_creator_head() {

        T_submacro_creator_head result = this.cached_t_submacro_creator_head;

        if (result == null) {
            Macro current = this;

            while (!(current instanceof M_macro)) {
                current = current.get_parent();
            }

            result = ((M_macro) current).get_local_t_submacro_creator_head();
            this.cached_t_submacro_creator_head = result;
        }

        return result;
    }

    // ---- macro creators ----

    public M_package_declaration new_package_declaration(
            String p_package_name) {

        M_package_declaration result = new M_package_declaration(p_package_name);
        this.e_expand_0.add(result);
        return result;
    }

    public M_macro_constructor_head new_macro_constructor_head() {

        M_macro_constructor_head result = new M_macro_constructor_head(this);
        this.e_expand_2.add(result);
        return result;
    }

    public M_constructor_param new_constructor_param(
            String p_param_name) {

        M_constructor_param result = new M_constructor_param(this, p_param_name);
        this.e_expand_6.add(result);
        return result;
    }

    public M_constructor_parent_initialisation new_constructor_parent_initialisation() {

        M_constructor_parent_initialisation result = new M_constructor_parent_initialisation(
                this);
        this.e_expand_7.add(result);
        return result;
    }

    public M_constructor_param_initialisation new_constructor_param_initialisation(
            String p_param_name) {

        M_constructor_param_initialisation result = new M_constructor_param_initialisation(
                this, p_param_name);
        this.e_expand_8.add(result);
        return result;
    }

    public M_constructor_text_block_initialisation new_constructor_text_block_initialisation(
            String p_text_block_name) {

        M_constructor_text_block_initialisation result = new M_constructor_text_block_initialisation(
                this, p_text_block_name);
        this.e_expand_9.add(result);
        return result;
    }

    public M_macro_without_parent new_macro_without_parent() {

        M_macro_without_parent result = new M_macro_without_parent(this);
        this.e_expand_10.add(result);
        return result;
    }

    public M_macro_with_parent new_macro_with_parent() {

        M_macro_with_parent result = new M_macro_with_parent(this);
        this.e_expand_11.add(result);
        return result;
    }

    public M_param_declaration new_param_declaration(
            String p_param_name) {

        M_param_declaration result = new M_param_declaration(this, p_param_name);
        this.e_expand_12.add(result);
        return result;
    }

    public M_text_block_declaration new_text_block_declaration(
            String p_text_block_name) {

        M_text_block_declaration result = new M_text_block_declaration(this,
                p_text_block_name);
        this.e_expand_13.add(result);
        return result;
    }

    public M_expand_declaration new_expand_declaration(
            String p_expand_name) {

        M_expand_declaration result = new M_expand_declaration(this,
                p_expand_name);
        this.e_expand_14.add(result);
        return result;
    }

    public M_param_accessor new_param_accessor(
            String p_param_name,
            String p_containing_macro_name) {

        M_param_accessor result = new M_param_accessor(p_param_name,
                p_containing_macro_name);
        this.e_expand_15.add(result);
        return result;
    }

    public M_top_level_text_block_accessor new_top_level_text_block_accessor(
            String p_text_block_name) {

        M_top_level_text_block_accessor result = new M_top_level_text_block_accessor(
                p_text_block_name);
        this.e_expand_16.add(result);
        return result;
    }

    public M_sub_level_text_block_accessor new_sub_level_text_block_accessor(
            String p_text_block_name,
            String p_containing_macro_name) {

        M_sub_level_text_block_accessor result = new M_sub_level_text_block_accessor(
                p_text_block_name, p_containing_macro_name);
        this.e_expand_16.add(result);
        return result;
    }

    public M_submacro_creator new_submacro_creator(
            String p_submacro_name) {

        M_submacro_creator result = new M_submacro_creator(this,
                p_submacro_name);
        this.e_expand_17.add(result);
        return result;
    }

    public M_text_append new_text_append(
            String p_text) {

        M_text_append result = new M_text_append(p_text);
        this.e_expand_23.add(result);
        return result;
    }

    public M_eol_append new_eol_append() {

        M_eol_append result = new M_eol_append();
        this.e_expand_23.add(result);
        return result;
    }

    public M_escape_append new_escape_append(
            String p_char) {

        M_escape_append result = new M_escape_append(p_char);
        this.e_expand_23.add(result);
        return result;
    }

    public M_var_append new_var_append(
            String p_var_name) {

        M_var_append result = new M_var_append(p_var_name);
        this.e_expand_23.add(result);
        return result;
    }

    public M_expand_append new_expand_append(
            String p_expand_name) {

        M_expand_append result = new M_expand_append(this, p_expand_name);
        this.e_expand_23.add(result);
        return result;
    }

    public M_text_insert_append new_text_insert_append(
            String p_text_insert_name) {

        M_text_insert_append result = new M_text_insert_append(
                p_text_insert_name);
        this.e_expand_23.add(result);
        return result;
    }

    // ---- appendTo ----

    @Override
    public void appendTo(
            StringBuilder sb) {

        get_t_header().appendTo(sb);

        if (this.e_expand_0.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_0) {
                if (first) {
                    first = false;
                }
                else {
                }
                macro.appendTo(sb);
            }
        }

        sb.append(EOL);

        sb.append("import java.util.LinkedList;");

        sb.append(EOL);

        sb.append("import java.util.List;");

        sb.append(EOL);

        sb.append(EOL);

        sb.append("public class M_");

        sb.append(get_p_macro_name());

        sb.append(" extends Macro {");

        sb.append(EOL);

        sb.append(EOL);

        sb.append("  // ---- constructor ----");

        sb.append(EOL);

        sb.append(EOL);

        if (this.e_expand_2.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_2) {
                if (first) {
                    first = false;
                }
                else {
                }
                macro.appendTo(sb);
            }
        }

        if (this.e_expand_6.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_6) {
                if (first) {
                    first = false;
                }
                else {
                    get_t_comma().appendTo(sb);
                }
                macro.appendTo(sb);
            }
        }

        sb.append(") {");

        sb.append(EOL);

        if (this.e_expand_7.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_7) {
                if (first) {
                    first = false;
                }
                else {
                }
                macro.appendTo(sb);
            }
        }

        if (this.e_expand_8.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_8) {
                if (first) {
                    first = false;
                }
                else {
                }
                macro.appendTo(sb);
            }
        }

        if (this.e_expand_9.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_9) {
                if (first) {
                    first = false;
                }
                else {
                }
                macro.appendTo(sb);
            }
        }

        sb.append("  }");

        sb.append(EOL);

        sb.append(EOL);

        if (this.e_expand_10.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_10) {
                if (first) {
                    first = false;
                }
                else {
                }
                macro.appendTo(sb);
            }
        }

        if (this.e_expand_11.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_11) {
                if (first) {
                    first = false;
                }
                else {
                }
                macro.appendTo(sb);
            }
        }

        if (this.e_expand_12.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_12) {
                if (first) {
                    first = false;
                    get_t_param_declaration_header().appendTo(sb);
                }
                else {
                }
                macro.appendTo(sb);
            }
        }

        if (this.e_expand_13.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_13) {
                if (first) {
                    first = false;
                    get_t_text_block_declaration_header().appendTo(sb);
                }
                else {
                }
                macro.appendTo(sb);
            }
        }

        if (this.e_expand_14.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_14) {
                if (first) {
                    first = false;
                    get_t_expand_declaration_header().appendTo(sb);
                }
                else {
                }
                macro.appendTo(sb);
            }
            get_t_blank_line().appendTo(sb);
        }

        if (this.e_expand_15.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_15) {
                if (first) {
                    first = false;
                    get_t_param_accessor_head().appendTo(sb);
                }
                else {
                }
                macro.appendTo(sb);
            }
        }

        if (this.e_expand_16.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_16) {
                if (first) {
                    first = false;
                    get_t_text_block_accessor_head().appendTo(sb);
                }
                else {
                }
                macro.appendTo(sb);
            }
        }

        if (this.e_expand_17.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_17) {
                if (first) {
                    first = false;
                    get_t_submacro_creator_head().appendTo(sb);
                }
                else {
                }
                macro.appendTo(sb);
            }
        }

        sb.append(EOL);

        sb.append("  // ---- appendTo ----");

        sb.append(EOL);

        sb.append(EOL);

        sb.append("  @Override");

        sb.append(EOL);

        sb.append("  public void appendTo(StringBuilder sb) {");

        sb.append(EOL);

        if (this.e_expand_23.size() == 0) {
        }
        else {
            boolean first = true;
            for (Macro macro : this.e_expand_23) {
                if (first) {
                    first = false;
                }
                else {
                    get_t_blank_line().appendTo(sb);
                }
                macro.appendTo(sb);
            }
        }

        sb.append("  }");

        sb.append(EOL);

        sb.append(EOL);

        sb.append("}");

        sb.append(EOL);
    }

}
