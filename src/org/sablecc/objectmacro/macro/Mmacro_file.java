/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.macro;

import java.util.LinkedList;
import java.util.List;

public class Mmacro_file
        extends Macro {

    private final List<Macro> eexpand1 = new LinkedList<Macro>();

    private final List<Macro> eexpand2 = new LinkedList<Macro>();

    public Mmacro_file() {

    }

    public Mpackage newMpackage(
            String pname) {

        Mpackage vpackage = new Mpackage(pname);
        this.eexpand1.add(vpackage);
        return vpackage;
    }

    public Mmacro newMmacro(
            String pclass_name,
            String pindent) {

        Mmacro vmacro = new Mmacro(pclass_name, pindent);
        this.eexpand2.add(vmacro);
        return vmacro;
    }

    public void appendTo(
            StringBuilder sb) {

        sb.append("/* This file was generated by SableCC's ObjectMacro. */");
        sb.append(System.getProperty("line.separator"));
        for (Macro vMacro : this.eexpand1) {
            vMacro.appendTo(sb);
        }
        sb.append(System.getProperty("line.separator"));
        sb.append("import java.util.*;");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        for (Macro vMacro : this.eexpand2) {
            vMacro.appendTo(sb);
        }
    }

    public class Mmacro
            extends Macro {

        private final String pclass_name;

        private final String pindent;

        private final List<Mparameter_declaration> mparameter_declaration = new LinkedList<Mparameter_declaration>();

        private final List<Mnested_macro_declaration> mnested_macro_declaration = new LinkedList<Mnested_macro_declaration>();

        private final List<Mexpand_declaration> mexpand_declaration = new LinkedList<Mexpand_declaration>();

        private final List<Mpublic_constructor> mpublic_constructor = new LinkedList<Mpublic_constructor>();

        private final List<Mconstructor_first_parameter> mconstructor_first_parameter = new LinkedList<Mconstructor_first_parameter>();

        private final List<Mconstructor_additional_parameter> mconstructor_additional_parameter = new LinkedList<Mconstructor_additional_parameter>();

        private final List<Mconstructor_initialisation> mconstructor_initialisation = new LinkedList<Mconstructor_initialisation>();

        private final List<Mnested_macro> mnested_macro = new LinkedList<Mnested_macro>();

        private final List<Macro> eexpand3 = new LinkedList<Macro>();

        private final List<Macro> eexpand4 = new LinkedList<Macro>();

        Mmacro(
                String pclass_name,
                String pindent) {

            this.pclass_name = pclass_name;
            this.pindent = pindent;
        }

        public Mparameter_declaration newMparameter_declaration(
                String pparam_name) {

            Mparameter_declaration vparameter_declaration = new Mparameter_declaration(
                    pparam_name);
            this.mparameter_declaration.add(vparameter_declaration);
            return vparameter_declaration;
        }

        public Mnested_macro_declaration newMnested_macro_declaration(
                String pnested_macro_name) {

            Mnested_macro_declaration vnested_macro_declaration = new Mnested_macro_declaration(
                    pnested_macro_name);
            this.mnested_macro_declaration.add(vnested_macro_declaration);
            return vnested_macro_declaration;
        }

        public Mexpand_declaration newMexpand_declaration(
                String pexpand_name) {

            Mexpand_declaration vexpand_declaration = new Mexpand_declaration(
                    pexpand_name);
            this.mexpand_declaration.add(vexpand_declaration);
            return vexpand_declaration;
        }

        public Mpublic_constructor newMpublic_constructor() {

            Mpublic_constructor vpublic_constructor = new Mpublic_constructor();
            this.mpublic_constructor.add(vpublic_constructor);
            return vpublic_constructor;
        }

        public Mconstructor_first_parameter newMconstructor_first_parameter(
                String pparam_name) {

            Mconstructor_first_parameter vconstructor_first_parameter = new Mconstructor_first_parameter(
                    pparam_name);
            this.mconstructor_first_parameter.add(vconstructor_first_parameter);
            return vconstructor_first_parameter;
        }

        public Mconstructor_additional_parameter newMconstructor_additional_parameter(
                String pparam_name) {

            Mconstructor_additional_parameter vconstructor_additional_parameter = new Mconstructor_additional_parameter(
                    pparam_name);
            this.mconstructor_additional_parameter
                    .add(vconstructor_additional_parameter);
            return vconstructor_additional_parameter;
        }

        public Mconstructor_initialisation newMconstructor_initialisation(
                String pparam_name) {

            Mconstructor_initialisation vconstructor_initialisation = new Mconstructor_initialisation(
                    pparam_name);
            this.mconstructor_initialisation.add(vconstructor_initialisation);
            return vconstructor_initialisation;
        }

        public Mnested_macro newMnested_macro(
                String pnested_macro_name) {

            Mnested_macro vnested_macro = new Mnested_macro(pnested_macro_name);
            this.mnested_macro.add(vnested_macro);
            return vnested_macro;
        }

        public Mvar_append newMvar_append(
                String pvar_name) {

            Mvar_append vvar_append = new Mvar_append(pvar_name);
            this.eexpand3.add(vvar_append);
            return vvar_append;
        }

        public Mtext_append newMtext_append(
                String ptext) {

            Mtext_append vtext_append = new Mtext_append(ptext);
            this.eexpand3.add(vtext_append);
            return vtext_append;
        }

        public Mdquote_append newMdquote_append() {

            Mdquote_append vdquote_append = new Mdquote_append();
            this.eexpand3.add(vdquote_append);
            return vdquote_append;
        }

        public Meol_append newMeol_append() {

            Meol_append veol_append = new Meol_append();
            this.eexpand3.add(veol_append);
            return veol_append;
        }

        public Mescape_append newMescape_append(
                String pchar) {

            Mescape_append vescape_append = new Mescape_append(pchar);
            this.eexpand3.add(vescape_append);
            return vescape_append;
        }

        public Mnested_macro_append newMnested_macro_append(
                String pnested_macro_name) {

            Mnested_macro_append vnested_macro_append = new Mnested_macro_append(
                    pnested_macro_name);
            this.eexpand3.add(vnested_macro_append);
            return vnested_macro_append;
        }

        public Mexpand_append newMexpand_append(
                String pexpand_name) {

            Mexpand_append vexpand_append = new Mexpand_append(pexpand_name);
            this.eexpand3.add(vexpand_append);
            return vexpand_append;
        }

        public Mmacro newMmacro(
                String pclass_name,
                String pindent) {

            Mmacro vmacro = new Mmacro(pclass_name, pindent);
            this.eexpand4.add(vmacro);
            return vmacro;
        }

        public void appendTo(
                StringBuilder sb) {

            sb.append(this.pindent);
            sb.append("public class M_");
            sb.append(this.pclass_name);
            sb.append(" extends Macro {");
            sb.append(System.getProperty("line.separator"));
            sb.append(System.getProperty("line.separator"));
            for (Mparameter_declaration vparameter_declaration : this.mparameter_declaration) {
                vparameter_declaration.appendTo(sb);
            }
            sb.append(System.getProperty("line.separator"));
            for (Mnested_macro_declaration vnested_macro_declaration : this.mnested_macro_declaration) {
                vnested_macro_declaration.appendTo(sb);
            }
            sb.append(System.getProperty("line.separator"));
            for (Mexpand_declaration vexpand_declaration : this.mexpand_declaration) {
                vexpand_declaration.appendTo(sb);
            }
            sb.append(System.getProperty("line.separator"));
            sb.append(this.pindent);
            sb.append("  ");
            for (Mpublic_constructor vpublic_constructor : this.mpublic_constructor) {
                vpublic_constructor.appendTo(sb);
            }
            sb.append("M_");
            sb.append(this.pclass_name);
            sb.append("(");
            for (Mconstructor_first_parameter vconstructor_first_parameter : this.mconstructor_first_parameter) {
                vconstructor_first_parameter.appendTo(sb);
            }
            for (Mconstructor_additional_parameter vconstructor_additional_parameter : this.mconstructor_additional_parameter) {
                vconstructor_additional_parameter.appendTo(sb);
            }
            sb.append(") {");
            sb.append(System.getProperty("line.separator"));
            for (Mconstructor_initialisation vconstructor_initialisation : this.mconstructor_initialisation) {
                vconstructor_initialisation.appendTo(sb);
            }
            sb.append(this.pindent);
            sb.append("  }");
            sb.append(System.getProperty("line.separator"));
            sb.append(System.getProperty("line.separator"));
            for (Mnested_macro vnested_macro : this.mnested_macro) {
                vnested_macro.appendTo(sb);
            }
            sb.append(System.getProperty("line.separator"));
            sb.append(this.pindent);
            sb.append("  public void appendTo(StringBuilder sb) {");
            sb.append(System.getProperty("line.separator"));
            for (Macro vMacro : this.eexpand3) {
                vMacro.appendTo(sb);
            }
            sb.append(this.pindent);
            sb.append("  }");
            sb.append(System.getProperty("line.separator"));
            sb.append(System.getProperty("line.separator"));
            for (Macro vMacro : this.eexpand4) {
                vMacro.appendTo(sb);
            }
            sb.append(this.pindent);
            sb.append("}");
            sb.append(System.getProperty("line.separator"));
            sb.append(System.getProperty("line.separator"));
        }

        public class Mparameter_declaration
                extends Macro {

            private final String pparam_name;

            Mparameter_declaration(
                    String pparam_name) {

                this.pparam_name = pparam_name;
            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(Mmacro.this.pindent);
                sb.append("  private final String p_");
                sb.append(this.pparam_name);
                sb.append(";");
                sb.append(System.getProperty("line.separator"));
            }
        }

        public class Mnested_macro_declaration
                extends Macro {

            private final String pnested_macro_name;

            Mnested_macro_declaration(
                    String pnested_macro_name) {

                this.pnested_macro_name = pnested_macro_name;
            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(Mmacro.this.pindent);
                sb.append("  private final List<M_");
                sb.append(this.pnested_macro_name);
                sb.append("> m_");
                sb.append(this.pnested_macro_name);
                sb.append(" = new LinkedList<M_");
                sb.append(this.pnested_macro_name);
                sb.append(">();");
                sb.append(System.getProperty("line.separator"));
            }
        }

        public class Mexpand_declaration
                extends Macro {

            private final String pexpand_name;

            Mexpand_declaration(
                    String pexpand_name) {

                this.pexpand_name = pexpand_name;
            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(Mmacro.this.pindent);
                sb.append("  private final List<Macro> e_");
                sb.append(this.pexpand_name);
                sb.append(" = new LinkedList<Macro>();");
                sb.append(System.getProperty("line.separator"));
            }
        }

        public class Mpublic_constructor
                extends Macro {

            Mpublic_constructor() {

            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append("public ");
            }
        }

        public class Mconstructor_first_parameter
                extends Macro {

            private final String pparam_name;

            Mconstructor_first_parameter(
                    String pparam_name) {

                this.pparam_name = pparam_name;
            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(System.getProperty("line.separator"));
                sb.append(Mmacro.this.pindent);
                sb.append("      String p_");
                sb.append(this.pparam_name);
            }
        }

        public class Mconstructor_additional_parameter
                extends Macro {

            private final String pparam_name;

            Mconstructor_additional_parameter(
                    String pparam_name) {

                this.pparam_name = pparam_name;
            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(",");
                sb.append(System.getProperty("line.separator"));
                sb.append(Mmacro.this.pindent);
                sb.append("      String p_");
                sb.append(this.pparam_name);
            }
        }

        public class Mconstructor_initialisation
                extends Macro {

            private final String pparam_name;

            Mconstructor_initialisation(
                    String pparam_name) {

                this.pparam_name = pparam_name;
            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(Mmacro.this.pindent);
                sb.append("    this.p_");
                sb.append(this.pparam_name);
                sb.append(" = p_");
                sb.append(this.pparam_name);
                sb.append(";");
                sb.append(System.getProperty("line.separator"));
            }
        }

        public class Mnested_macro
                extends Macro {

            private final String pnested_macro_name;

            private final List<Mnested_macro_first_parameter> mnested_macro_first_parameter = new LinkedList<Mnested_macro_first_parameter>();

            private final List<Mnested_macro_additional_parameter> mnested_macro_additional_parameter = new LinkedList<Mnested_macro_additional_parameter>();

            private final List<Mnew_first_parameter> mnew_first_parameter = new LinkedList<Mnew_first_parameter>();

            private final List<Mnew_additional_parameter> mnew_additional_parameter = new LinkedList<Mnew_additional_parameter>();

            private final List<Madd_to_nested_macro> madd_to_nested_macro = new LinkedList<Madd_to_nested_macro>();

            private final List<Madd_to_expand> madd_to_expand = new LinkedList<Madd_to_expand>();

            Mnested_macro(
                    String pnested_macro_name) {

                this.pnested_macro_name = pnested_macro_name;
            }

            public Mnested_macro_first_parameter newMnested_macro_first_parameter(
                    String pparam_name) {

                Mnested_macro_first_parameter vnested_macro_first_parameter = new Mnested_macro_first_parameter(
                        pparam_name);
                this.mnested_macro_first_parameter
                        .add(vnested_macro_first_parameter);
                return vnested_macro_first_parameter;
            }

            public Mnested_macro_additional_parameter newMnested_macro_additional_parameter(
                    String pparam_name) {

                Mnested_macro_additional_parameter vnested_macro_additional_parameter = new Mnested_macro_additional_parameter(
                        pparam_name);
                this.mnested_macro_additional_parameter
                        .add(vnested_macro_additional_parameter);
                return vnested_macro_additional_parameter;
            }

            public Mnew_first_parameter newMnew_first_parameter(
                    String pparam_name) {

                Mnew_first_parameter vnew_first_parameter = new Mnew_first_parameter(
                        pparam_name);
                this.mnew_first_parameter.add(vnew_first_parameter);
                return vnew_first_parameter;
            }

            public Mnew_additional_parameter newMnew_additional_parameter(
                    String pparam_name) {

                Mnew_additional_parameter vnew_additional_parameter = new Mnew_additional_parameter(
                        pparam_name);
                this.mnew_additional_parameter.add(vnew_additional_parameter);
                return vnew_additional_parameter;
            }

            public Madd_to_nested_macro newMadd_to_nested_macro() {

                Madd_to_nested_macro vadd_to_nested_macro = new Madd_to_nested_macro();
                this.madd_to_nested_macro.add(vadd_to_nested_macro);
                return vadd_to_nested_macro;
            }

            public Madd_to_expand newMadd_to_expand(
                    String pexpand_name) {

                Madd_to_expand vadd_to_expand = new Madd_to_expand(pexpand_name);
                this.madd_to_expand.add(vadd_to_expand);
                return vadd_to_expand;
            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(Mmacro.this.pindent);
                sb.append("  public M_");
                sb.append(this.pnested_macro_name);
                sb.append(" newM_");
                sb.append(this.pnested_macro_name);
                sb.append("(");
                for (Mnested_macro_first_parameter vnested_macro_first_parameter : this.mnested_macro_first_parameter) {
                    vnested_macro_first_parameter.appendTo(sb);
                }
                for (Mnested_macro_additional_parameter vnested_macro_additional_parameter : this.mnested_macro_additional_parameter) {
                    vnested_macro_additional_parameter.appendTo(sb);
                }
                sb.append(") {");
                sb.append(System.getProperty("line.separator"));
                sb.append(Mmacro.this.pindent);
                sb.append("    M_");
                sb.append(this.pnested_macro_name);
                sb.append(" v_");
                sb.append(this.pnested_macro_name);
                sb.append(" = new M_");
                sb.append(this.pnested_macro_name);
                sb.append("(");
                for (Mnew_first_parameter vnew_first_parameter : this.mnew_first_parameter) {
                    vnew_first_parameter.appendTo(sb);
                }
                for (Mnew_additional_parameter vnew_additional_parameter : this.mnew_additional_parameter) {
                    vnew_additional_parameter.appendTo(sb);
                }
                sb.append(");");
                sb.append(System.getProperty("line.separator"));
                for (Madd_to_nested_macro vadd_to_nested_macro : this.madd_to_nested_macro) {
                    vadd_to_nested_macro.appendTo(sb);
                }
                for (Madd_to_expand vadd_to_expand : this.madd_to_expand) {
                    vadd_to_expand.appendTo(sb);
                }
                sb.append(Mmacro.this.pindent);
                sb.append("    return v_");
                sb.append(this.pnested_macro_name);
                sb.append(";");
                sb.append(System.getProperty("line.separator"));
                sb.append(Mmacro.this.pindent);
                sb.append("  }");
                sb.append(System.getProperty("line.separator"));
            }

            public class Mnested_macro_first_parameter
                    extends Macro {

                private final String pparam_name;

                Mnested_macro_first_parameter(
                        String pparam_name) {

                    this.pparam_name = pparam_name;
                }

                public void appendTo(
                        StringBuilder sb) {

                    sb.append(System.getProperty("line.separator"));
                    sb.append(Mmacro.this.pindent);
                    sb.append("      String p_");
                    sb.append(this.pparam_name);
                }
            }

            public class Mnested_macro_additional_parameter
                    extends Macro {

                private final String pparam_name;

                Mnested_macro_additional_parameter(
                        String pparam_name) {

                    this.pparam_name = pparam_name;
                }

                public void appendTo(
                        StringBuilder sb) {

                    sb.append(",");
                    sb.append(System.getProperty("line.separator"));
                    sb.append(Mmacro.this.pindent);
                    sb.append("      String p_");
                    sb.append(this.pparam_name);
                }
            }

            public class Mnew_first_parameter
                    extends Macro {

                private final String pparam_name;

                Mnew_first_parameter(
                        String pparam_name) {

                    this.pparam_name = pparam_name;
                }

                public void appendTo(
                        StringBuilder sb) {

                    sb.append("p_");
                    sb.append(this.pparam_name);
                }
            }

            public class Mnew_additional_parameter
                    extends Macro {

                private final String pparam_name;

                Mnew_additional_parameter(
                        String pparam_name) {

                    this.pparam_name = pparam_name;
                }

                public void appendTo(
                        StringBuilder sb) {

                    sb.append(", p_");
                    sb.append(this.pparam_name);
                }
            }

            public class Madd_to_nested_macro
                    extends Macro {

                Madd_to_nested_macro() {

                }

                public void appendTo(
                        StringBuilder sb) {

                    sb.append(Mmacro.this.pindent);
                    sb.append("    m_");
                    sb.append(Mnested_macro.this.pnested_macro_name);
                    sb.append(".add(v_");
                    sb.append(Mnested_macro.this.pnested_macro_name);
                    sb.append(");");
                    sb.append(System.getProperty("line.separator"));
                }
            }

            public class Madd_to_expand
                    extends Macro {

                private final String pexpand_name;

                Madd_to_expand(
                        String pexpand_name) {

                    this.pexpand_name = pexpand_name;
                }

                public void appendTo(
                        StringBuilder sb) {

                    sb.append(Mmacro.this.pindent);
                    sb.append("    e_");
                    sb.append(this.pexpand_name);
                    sb.append(".add(v_");
                    sb.append(Mnested_macro.this.pnested_macro_name);
                    sb.append(");");
                    sb.append(System.getProperty("line.separator"));
                }
            }
        }

        public class Mvar_append
                extends Macro {

            private final String pvar_name;

            Mvar_append(
                    String pvar_name) {

                this.pvar_name = pvar_name;
            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(Mmacro.this.pindent);
                sb.append("    sb.append(p_");
                sb.append(this.pvar_name);
                sb.append(");");
                sb.append(System.getProperty("line.separator"));
            }
        }

        public class Mtext_append
                extends Macro {

            private final String ptext;

            Mtext_append(
                    String ptext) {

                this.ptext = ptext;
            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(Mmacro.this.pindent);
                sb.append("    sb.append(");
                sb.append('"');
                sb.append(this.ptext);
                sb.append('"');
                sb.append(");");
                sb.append(System.getProperty("line.separator"));
            }
        }

        public class Mdquote_append
                extends Macro {

            Mdquote_append() {

            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(Mmacro.this.pindent);
                sb.append("    sb.append('");
                sb.append('"');
                sb.append("');");
                sb.append(System.getProperty("line.separator"));
            }
        }

        public class Meol_append
                extends Macro {

            Meol_append() {

            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(Mmacro.this.pindent);
                sb.append("    sb.append(System.getProperty(");
                sb.append('"');
                sb.append("line.separator");
                sb.append('"');
                sb.append("));");
                sb.append(System.getProperty("line.separator"));
            }
        }

        public class Mescape_append
                extends Macro {

            private final String pchar;

            Mescape_append(
                    String pchar) {

                this.pchar = pchar;
            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(Mmacro.this.pindent);
                sb.append("    sb.append('");
                sb.append(this.pchar);
                sb.append("');");
                sb.append(System.getProperty("line.separator"));
            }
        }

        public class Mnested_macro_append
                extends Macro {

            private final String pnested_macro_name;

            Mnested_macro_append(
                    String pnested_macro_name) {

                this.pnested_macro_name = pnested_macro_name;
            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(Mmacro.this.pindent);
                sb.append("    for(M_");
                sb.append(this.pnested_macro_name);
                sb.append(" v_");
                sb.append(this.pnested_macro_name);
                sb.append(" : m_");
                sb.append(this.pnested_macro_name);
                sb.append(") {");
                sb.append(System.getProperty("line.separator"));
                sb.append(Mmacro.this.pindent);
                sb.append("      v_");
                sb.append(this.pnested_macro_name);
                sb.append(".appendTo(sb);");
                sb.append(System.getProperty("line.separator"));
                sb.append(Mmacro.this.pindent);
                sb.append("    }");
                sb.append(System.getProperty("line.separator"));
            }
        }

        public class Mexpand_append
                extends Macro {

            private final String pexpand_name;

            Mexpand_append(
                    String pexpand_name) {

                this.pexpand_name = pexpand_name;
            }

            public void appendTo(
                    StringBuilder sb) {

                sb.append(Mmacro.this.pindent);
                sb.append("    for(Macro v_Macro : e_");
                sb.append(this.pexpand_name);
                sb.append(") {");
                sb.append(System.getProperty("line.separator"));
                sb.append(Mmacro.this.pindent);
                sb.append("      v_Macro.appendTo(sb);");
                sb.append(System.getProperty("line.separator"));
                sb.append(Mmacro.this.pindent);
                sb.append("    }");
                sb.append(System.getProperty("line.separator"));
            }
        }
    }
}
