/* This file was generated by SableCC's ObjectMacro. */
package org.test.back;

import java.util.*;

public class MD extends Macro{



    public MD(Macro pX[], String pX, Macro pY[], Macro pZ[], String pX){


    }




    @Override
    void apply(
            InternalsInitializer internalsInitializer){

        internalsInitializer.setD(this);
    }

    @Override
    publicpublicpublicpublic String build(Context contextContext contextContext contextContext contextContext contextContext context){

        String local_expansion = this.expansions.get(context)this.expansions.get(context)this.expansions.get(context);

        if(local_expansion != null){
            return local_expansion;
        }

        StringBuilder sb0 = new StringBuilder();

        sb0.append(", ");
        sb0.append("La liste x : ");
        sb0.append(buildX());
        sb0.append(LINE_SEPARATOR);
        sb0.append("Corps de semicolon : ");
        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));
        sb0.append(".");
        sb0.append("empty");
        sb0.append("; ");
        sb0.append("Le corps de C : ");
        sb0.append(buildX());
        sb0.append(LINE_SEPARATOR);
        sb1.append("first argument of c in a");
        sb1.append("first argument of c in a");
        sb0.append(buildY());
        sb0.append(LINE_SEPARATOR);
        sb1.append("first argument of c in b");
        sb1.append("first argument of c in b");
        sb0.append(buildY());
        sb0.append(buildY());
        sb0.append(" ");
        sb0.append(buildZ());
        sb1.append("y1 ");
        sb2.append("y2 ");
        sb3.append("y3");
        sb4.append("yz3");
        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));
        sb6.append("a");
        sbF.append("a");
        sb7.append("b");
        sbG.append("b");
        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));
        MC minsert_2 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());
        sb1.append(minsert_2.build(null));
        sb9.append("y4");
        sbI.append("y4");
        sb10.append("z4");
        sbJ.append("z4");
        MC minsert_5 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));        MC minsert_2 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());
        sb1.append(minsert_2.build(null));        sb9.append("y4");        sbI.append("y4");        sb10.append("z4");        sbJ.append("z4");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());        minsert_1.setX(null, sbA.toString());        minsert_5.setY(null, sbI.toString());        minsert_5.setZ(null, sbJ.toString());
        sb8.append(minsert_5.build(null));
        sb12.append("y4");
        sbL.append("y4");
        sb13.append("z4");
        sbM.append("z4");
        MC minsert_6 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));        MC minsert_2 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());
        sb1.append(minsert_2.build(null));        sb9.append("y4");        sbI.append("y4");        sb10.append("z4");        sbJ.append("z4");        MC minsert_5 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));        MC minsert_2 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());
        sb1.append(minsert_2.build(null));        sb9.append("y4");        sbI.append("y4");        sb10.append("z4");        sbJ.append("z4");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());        minsert_1.setX(null, sbA.toString());        minsert_5.setY(null, sbI.toString());        minsert_5.setZ(null, sbJ.toString());
        sb8.append(minsert_5.build(null));        sb12.append("y4");        sbL.append("y4");        sb13.append("z4");        sbM.append("z4");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());        minsert_1.setX(null, sbA.toString());        minsert_5.setY(null, sbI.toString());        minsert_5.setZ(null, sbJ.toString());        minsert_1.setY(null, sbH.toString());        minsert_6.setY(null, sbL.toString());        minsert_6.setZ(null, sbM.toString());
        sb11.append(minsert_6.build(null));
        ME minsert_1 = new ME();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));        MC minsert_2 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());
        sb1.append(minsert_2.build(null));        sb9.append("y4");        sbI.append("y4");        sb10.append("z4");        sbJ.append("z4");        MC minsert_5 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));        MC minsert_2 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());
        sb1.append(minsert_2.build(null));        sb9.append("y4");        sbI.append("y4");        sb10.append("z4");        sbJ.append("z4");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());        minsert_1.setX(null, sbA.toString());        minsert_5.setY(null, sbI.toString());        minsert_5.setZ(null, sbJ.toString());
        sb8.append(minsert_5.build(null));        sb12.append("y4");        sbL.append("y4");        sb13.append("z4");        sbM.append("z4");        MC minsert_6 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));        MC minsert_2 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());
        sb1.append(minsert_2.build(null));        sb9.append("y4");        sbI.append("y4");        sb10.append("z4");        sbJ.append("z4");        MC minsert_5 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));        MC minsert_2 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");        MC minsert_4 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");        MC minsert_3 = new MC();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");        MSemicolonSeparator minsert_1 = new MSemicolonSeparator();
                sb0.append(", ");        sb0.append("La liste x : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb0.append("Corps de semicolon : ");
        
        sb0.append(minsert_1.build(null));        sb0.append(".");        sb0.append("empty");        sb0.append("; ");        sb0.append("Le corps de C : ");        sb0.append(buildX());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in a");        sb1.append("first argument of c in a");        sb0.append(buildY());        sb0.append(LINE_SEPARATOR);        sb1.append("first argument of c in b");        sb1.append("first argument of c in b");        sb0.append(buildY());        sb0.append(buildY());        sb0.append(" ");        sb0.append(buildZ());        sb1.append("y1 ");        sb2.append("y2 ");        sb3.append("y3");        sb4.append("yz3");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());
        sb2.append(minsert_3.build(null));        sb6.append("a");        sbF.append("a");        sb7.append("b");        sbG.append("b");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());
        sb5.append(minsert_4.build(null));
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());
        sb1.append(minsert_2.build(null));        sb9.append("y4");        sbI.append("y4");        sb10.append("z4");        sbJ.append("z4");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());        minsert_1.setX(null, sbA.toString());        minsert_5.setY(null, sbI.toString());        minsert_5.setZ(null, sbJ.toString());
        sb8.append(minsert_5.build(null));        sb12.append("y4");        sbL.append("y4");        sb13.append("z4");        sbM.append("z4");
                minsert_1.setX(null, getX(context));        mB.setY(YContext, getZ(YContext));        mC.setY(ZContext, );        mC.setZ(ZContext, getX(ZContext));        mC.setY(YContext, );        mC.setZ(YContext, getX(YContext));        minsert_3.setY(null, sbC.toString());        minsert_3.setZ(null, sbD.toString());        minsert_2.setY(null, sbB.toString());        minsert_4.setY(null, sbF.toString());        minsert_4.setZ(null, sbG.toString());        minsert_2.setZ(null, sbE.toString());        minsert_1.setX(null, sbA.toString());        minsert_5.setY(null, sbI.toString());        minsert_5.setZ(null, sbJ.toString());        minsert_1.setY(null, sbH.toString());        minsert_6.setY(null, sbL.toString());        minsert_6.setZ(null, sbM.toString());
        sb11.append(minsert_6.build(null));
        
        sb11.append(minsert_1.build(null));

        local_expansion = sb0.toString();
        this.expansions.put(context, local_expansion)this.expansions.put(context, local_expansion)this.expansions.put(context, local_expansion);
        return local_expansion;
}

    @Override
    String build(Context context) {
        return build();
    }    @Override
    String build(Context context) {
        return build();
    }    @Override
    String build(Context context) {
        return build();
    }    @Override
    String build(Context context) {
        return build();
    }
}