/* This file was generated by SableCC's ObjectMacro. */

package org.test.back_old;

import java.util.*;

public class MSemicolonSeparator extends Macro{

    private Map<Context, InternalValue> list_X = new LinkedHashMap<>();

    public MSemicolonSeparator(){
    }

    void setX(
            Context context,
            InternalValue internal_value) {

        if(internal_value == null){
            throw new RuntimeException("macros cannot be null");
        }

        this.list_X.put(context, internal_value);
    }

    private String buildX(Context context){

        InternalValue macros = this.list_X.get(context);
        return macros.build();
    }

    private InternalValue getX(Context context){
        return this.list_X.get(context);
    }
    @Override
    void apply(
            InternalsInitializer internalsInitializer){

        internalsInitializer.setSemicolonSeparator(this);
    }

    @Override
     String build(Context context){

        BuildState buildState = this.build_states.get(context);

        if(buildState == null){
            buildState = new BuildState();
        }
        else if(buildState.getExpansion() == null){
            throw ObjectMacroException.cyclicReference("SemicolonSeparator");
        }
        else{
            return buildState.getExpansion();
        }
        this.build_states.put(context, buildState);

        
        
        StringBuilder sb0 = new StringBuilder();

        sb0.append("Le corps de C : ");
        sb0.append(buildX(context));

        buildState.setExpansion(sb0.toString());
        return sb0.toString();
    }
}
