/* This file was generated by SableCC's ObjectMacro. */

package org.test.back_old;

import java.util.*;

public class MC extends Macro{

    private Map<Context, String> field_Q = new LinkedHashMap<>();

    private Map<Context, String> field_R = new LinkedHashMap<>();

    public MC(){
    }

    void setQ(
            Context context,
            String value) {

        if(value == null){
            throw new RuntimeException("value cannot be null here");
        }

        this.field_Q.put(context, value);
    }

    void setR(
            Context context,
            String value) {

        if(value == null){
            throw new RuntimeException("value cannot be null here");
        }

        this.field_R.put(context, value);
    }

    private String buildQ(Context context){

        return this.field_Q.get(context);
    }

    private String buildR(Context context){

        return this.field_R.get(context);
    }

    private String getQ(Context context){

        return this.field_Q.get(context);
    }

    private String getR(Context context){

        return this.field_R.get(context);
    }
    @Override
    void apply(
            InternalsInitializer internalsInitializer){

        internalsInitializer.setC(this);
    }

    @Override
     String build(Context context){

        BuildState buildState = this.build_states.get(context);

        if(buildState == null){
            buildState = new BuildState();
        }
        else if(buildState.getExpansion() == null){
            throw ObjectMacroException.cyclicReference("C");
        }
        else{
            return buildState.getExpansion();
        }
        this.build_states.put(context, buildState);

        
        
        StringBuilder sb0 = new StringBuilder();

        sb0.append("=============== C ==============");
        sb0.append(LINE_SEPARATOR);
        sb0.append("Q : ");
        sb0.append(buildQ(context));
        sb0.append(LINE_SEPARATOR);
        sb0.append("R : ");
        sb0.append(buildR(context));

        buildState.setExpansion(sb0.toString());
        return sb0.toString();
    }
}
