# This file is part of SableCC ( http://sablecc.org ).
#
# See the NOTICE file distributed with this work for copyright information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

Macro package_declaration
    Param
        package_name : String;
{Body}
package {package_name};
{End}

Macro entity
    Param
        name : String;
        package : package_declaration;
        attributes : attribute, separator="\n";
        relationships : relationship, separator="\n";
        accessors : setter, getter, separator="\n\n";
{Body}
{package}

@Entity
{Insert: annotation_table(name)}
public class {name} {
{Indent: "\t"}
{attributes}
{relationships}
{accessors}
{End}
}
{End}

Macro annotation_table
    Internal
        name : String;
{Body}
@Table(name="{name}")
{End}

Macro column
    Internal
        name : String;
{Body}
@Column(name="{name}")
{End}

Macro attribute
    Param
        name : String;
        type : String;
        id : primary_key, id_incrementation_strategy, separator="\n";
        not_null : not_null;
{Body}
{id}
{not_null}
{Insert: column(name)}
private {type} {name};

{End}

Macro primary_key
{Body}
@Id
{End}

Macro id_incrementation_strategy
    Param
        strategy : String;
{Body}
@GeneratedValue(strategy=GenerationType.{strategy})
{End}

Macro not_null
{Body}
@NotNull
{End}

Macro setter
    Param
        name : String;
        type : String;
{Body}
public void set{name}({type} {name}){
    this.{name} = {name};
}
{End}

Macro getter
    Param
        name : String;
        type : String;
{Body}
public {type} set{name}(){
    return this.{name};
}
{End}

Macro relationship
    Param
        name : String;
        fetch_type : String;
        relation : one_to_one(directives), many_to_many(directives), many_to_one(directives), one_to_many(directives);
        attribute_type : list(entity_referenced), none="{entity_referenced}";
        directives : fetch_strategy(fetch_type), mapped_by;
        entity_referenced : String;
{Body}
{relation}
private {attribute_type} {name};
{End}

Macro list
    Internal
        entity_name : String;
{Body}
List<{entity_name}>
{End}

Macro one_to_one
    Param
        column : String;
        join_column : join_column(column);
    Internal
        directives : fetch_strategy, mapped_by;
{Body}
@OneToOne({directives})
{join_column}
{End}

Macro many_to_many
    Internal
        directives : fetch_strategy, mapped_by;
{Body}
@ManyToMany({directives})
{End}

Macro many_to_one
    Internal
        directives : fetch_strategy, mapped_by;
{Body}
@ManyToOne({directives})
{End}

Macro one_to_many
    Internal
        directives : fetch_strategy, mapped_by;
{Body}
@OneToMany({directives})
{End}

Macro fetch_strategy
    Internal
        fetch_type : String;
{Body}
fetch=FetchType.{fetch_type}
{End}

Macro join_column
    Internal
        column_name : String;
{Body}
@JoinColumn(name="{column_name}")
{End}

Macro mapped_by
    Param
        parameter_name : String;
{Body}
mappedBy="{parameter_name}"
{End}

Macro cascade
    Param
        types : cascade_type, separator=", ";
{Body}
cascade={{ {types} }
{End}

Macro cascade_type
    Param
        type_name : String;
{Body}
CascadeType.{type_name}
{End}
